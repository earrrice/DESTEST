# 初始排列
ip = [
    57, 49, 41, 33, 25, 17, 9, 1,
    59, 51, 43, 35, 27, 19, 11, 3,
    61, 53, 45, 37, 29, 21, 13, 5,
    63, 55, 47, 39, 31, 23, 15, 7,
    56, 48, 40, 32, 24, 16, 8, 0,
    58, 50, 42, 34, 26, 18, 10, 2,
    60, 52, 44, 36, 28, 20, 12, 4,
    62, 54, 46, 38, 30, 22, 14, 6
]

# 終結排列
fp = [
    39, 7, 47, 15, 55, 23, 63, 31,
    38, 6, 46, 14, 54, 22, 62, 30,
    37, 5, 45, 13, 53, 21, 61, 29,
    36, 4, 44, 12, 52, 20, 60, 28,
    35, 3, 43, 11, 51, 19, 59, 27,
    34, 2, 42, 10, 50, 18, 58, 26,
    33, 1, 41, 9, 49, 17, 57, 25,
    32, 0, 40, 8, 48, 16, 56, 24
]

# 金匙排列 A
pc1 = [
    56, 48, 40, 32, 24, 16, 8, 0,
    57, 49, 41, 33, 25, 17, 9, 1,
    58, 50, 42, 34, 26, 18, 10, 2,
    59, 51, 43, 35, 27, 19, 11, 3,
    62, 54, 46, 38, 30, 22, 14, 6,
    61, 53, 45, 37, 29, 21, 13, 5,
    60, 52, 44, 36, 28, 20, 12, 4,
    27, 19, 11, 3
]

# 金匙排列 B
pc2 = [
    13, 16, 10, 23, 0, 4, 2, 27,
    14, 5, 20, 9, 22, 18, 11, 3,
    25, 7, 15, 6, 26, 19, 12, 1,
    40, 51, 30, 36, 46, 54, 29, 39,
    50, 44, 32, 47, 43, 48, 38, 55,
    33, 52, 45, 41, 49, 35, 28, 31
]

s = [
    [
    0x008082001,0x000000001,0x000080001,0x008082021,
    0x008080021,0x000082021,0x000000021,0x000080001,
    0x000002001,0x008082001,0x008082021,0x000002001,
    0x008002021,0x008080021,0x008000001,0x000000021,
    0x000002021,0x008002001,0x008002001,0x000082001,
    0x000082001,0x008080001,0x008080001,0x008002021,
    0x000080021,0x008000021,0x008000021,0x000080021,
    0x000000001,0x000002021,0x000082021,0x008000001,
    0x000080001,0x008082021,0x000000021,0x008080001,
    0x008082001,0x008000001,0x008000001,0x000002001,
    0x008080021,0x000080001,0x000082001,0x008000021,
    0x000002001,0x000000021,0x008002021,0x000082021,
    0x008082021,0x000080021,0x008080001,0x008002021,
    0x008000021,0x000002021,0x000082021,0x008082001,
    0x000002021,0x008002001,0x008002001,0x000000001,
    0x000080021,0x000082001,0x000000001,0x008080021
    ],
    [0x400840101,0x400040001,0x000040001,0x000840101,
    0x000800001,0x000000101,0x400800101,0x400040101,
    0x400000101,0x400840101,0x400840001,0x400000001,
    0x400040001,0x000800001,0x000000101,0x400800101,
    0x000840001,0x000800101,0x400040101,0x000000001,
    0x400000001,0x000040001,0x000840101,0x400800001,
    0x000800101,0x400000101,0x000000001,0x000840001,
    0x000040101,0x400840001,0x400800001,0x000040101,
    0x000000001,0x000840101,0x400800101,0x000800001,
    0x400040101,0x400800001,0x400840001,0x000040001,
    0x400800001,0x400040001,0x000000101,0x400840101,
    0x000840001,0x000000001,0x000040001,0x400000001,
    0x000040101,0x400840001,0x000800001,0x400000101,
    0x000800101,0x400040101,0x400000101,0x000800101,
    0x000840001,0x000000001,0x400040001,0x000040101,
    0x400000001,0x400800101,0x400840101,0x000840001
    ],
    [
    0x000001041,0x040101001,0x000000001,0x040100041,
    0x040001001,0x000000001,0x000101041,0x040001001,
    0x000100041,0x040000041,0x040000041,0x000100001,
    0x040101041,0x000100041,0x040100001,0x000001041,
    0x040000001,0x000000041,0x040101001,0x000001001,
    0x000101001,0x040100001,0x040100041,0x000101041,
    0x040001041,0x000101001,0x000100001,0x040001041,
    0x000000041,0x040101041,0x000001001,0x040000001,
    0x040101001,0x040000001,0x000100401,0x000001041,
    0x000100001,0x040101001,0x040001001,0x000000001,
    0x000001001,0x000100041,0x040101041,0x040001001,
    0x040000041,0x000001001,0x000000001,0x040100041,
    0x040001041,0x000100001,0x040000001,0x040101041,
    0x000000041,0x000101041,0x000101001,0x040000041,
    0x040100001,0x040001041,0x000001041,0x040100001,
    0x000001041,0x000000041,0x040100041,0x000101001
    ],
    [
    0x804010001,0x800010401,0x800010401,0x000000401,
    0x004010401,0x804000401,0x804000001,0x800010001,
    0x000000001,0x004010001,0x004010001,0x804010401,
    0x800000401,0x000000001,0x004000401,0x804000001,
    0x800000001,0x000010001,0x004000001,0x804010001,
    0x000000401,0x004000001,0x800010001,0x000010401,
    0x804000401,0x800000001,0x000010401,0x004000401,
    0x000010001,0x004010401,0x804010401,0x800000401,
    0x004000401,0x804000001,0x004010001,0x804010401,
    0x800000401,0x000000011,0x000000001,0x004010001,
    0x000010401,0x004000401,0x804000401,0x800000001,
    0x804010001,0x800010401,0x800010401,0x000000401,
    0x804010401,0x800000401,0x801000011,0x000010001,
    0x804000001,0x800010001,0x004010401,0x804000401,
    0x800010001,0x000010401,0x004000001,0x804010001,
    0x000000401,0x004000001,0x000010001,0x004010401
    ],
    [
    0x000000801,0x010400801,0x010400001,0x210000801,
    0x000400001,0x000000801,0x200000001,0x010400001,
    0x200400801,0x000400001,0x010000801,0x200400801,
    0x210000801,0x210400001,0x000400801,0x200000001,
    0x010000001,0x200400001,0x200400001,0x000000001,
    0x200000801,0x210400801,0x210400801,0x010000801,
    0x210400001,0x200000801,0x000000001,0x210000001,
    0x010400801,0x010000001,0x210000001,0x000400801,
    0x000400001,0x210000801,0x000000801,0x010000001,
    0x200000001,0x010400001,0x210000801,0x200400801,
    0x010000801,0x200000001,0x210400001,0x010400801,
    0x200400801,0x000000801,0x010000001,0x210400001,
    0x210400801,0x000400801,0x210000001,0x210400801,
    0x010400001,0x000000001,0x200400001,0x210000001,
    0x000400801,0x010000801,0x200000801,0x000400001,
    0x000000001,0x200400001,0x010400801,0x200000801
    ],
    [
    0x000000801,0x010400801,0x010400001,0x210000801,
    0x000400001,0x000000801,0x200000001,0x010400001,
    0x200400801,0x000400001,0x010000801,0x200400801,
    0x210000801,0x210400001,0x000400801,0x200000001,
    0x010000001,0x200400001,0x200400001,0x000000001,
    0x200000801,0x210400801,0x210400801,0x010000801,
    0x210400001,0x200000801,0x000000001,0x210000001,
    0x010400801,0x010000001,0x210000001,0x000400801,
    0x000400001,0x210000801,0x000000801,0x010000001,
    0x200000001,0x010400001,0x210000801,0x200400801,
    0x010000801,0x200000001,0x210400001,0x010400801,
    0x200400801,0x000000801,0x010000001,0x210400001,
    0x210400801,0x000400801,0x210000001,0x210400801,
    0x010400001,0x000000001,0x200400001,0x210000001,
    0x000400801,0x010000801,0x200000801,0x000400001,
    0x000000001,0x200400001,0x010400801,0x200000801
    ],
    [
    0x000000801,0x010400801,0x010400001,0x210000801,
    0x000400001,0x000000801,0x200000001,0x010400001,
    0x200400801,0x000400001,0x010000801,0x200400801,
    0x210000801,0x210400001,0x000400801,0x200000001,
    0x010000001,0x200400001,0x200400001,0x000000001,
    0x200000801,0x210400801,0x210400801,0x010000801,
    0x210400001,0x200000801,0x000000001,0x210000001,
    0x010400801,0x010000001,0x210000001,0x000400801,
    0x000400001,0x210000801,0x000000801,0x010000001,
    0x200000001,0x010400001,0x210000801,0x200400801,
    0x010000801,0x200000001,0x210400001,0x010400801,
    0x200400801,0x000000801,0x010000001,0x210400001,
    0x210400801,0x000400801,0x210000001,0x210400801,
    0x010400001,0x000000001,0x200400001,0x210000001,
    0x000400801,0x010000801,0x200000801,0x000400001,
    0x000000001,0x200400001,0x010400801,0x200000801
    ],
    [
    0x001000001,0x021000011,0x020004011,0x000000001,
    0x000004001,0x020004011,0x001004011,0x021004001,
    0x021004011,0x001000001,0x000000011,0x020000011,
    0x000000011,0x020000001,0x021000011,0x000004011,
    0x020004001,0x001004011,0x001000011,0x020004001,
    0x020000011,0x021000001,0x021004001,0x001000011,
    0x021000001,0x000004001,0x000004011,0x021004011,
    0x001004001,0x000000011,0x020000001,0x001004001,
    0x020000001,0x001004001,0x001000001,0x020004011,
    0x020004011,0x021000011,0x021000011,0x000000011,
    0x001000011,0x020000001,0x020004001,0x001000001,
    0x021004001,0x000004011,0x001004011,0x021004001,
    0x000004011,0x020000011,0x021004011,0x021000001,
    0x001004001,0x000000001,0x000000011,0x021004011,
    0x000000001,0x001004011,0x021000001,0x000004001,
    0x020000011,0x020004001,0x000004001,0x001000011
    ],
]

import os

def clear_screen():
    os.system('cls' if os.name == 'nt' else 'clear')

def des_encrypt(data, key):
    # 這是一個簡單的模擬加密函數。你可以在這裡實現你的DES加密邏輯。
    encrypted_data = ''.join(chr((ord(char) + key[i % len(key)]) % 256) for i, char in enumerate(data))
    return encrypted_data

def main():
    userkey = []

    print("\nwelcome to the DES secret key crypto-system\n")
    print("\nplease input the key stream\n")
    print("\nthe key stream must be the type shown as following\n")
    print("\n** ** ** ** ** ** ** **\n")
    print("\nthe ‘*’ shown above can range from ‘0’ to ‘f’, i.e it is heximal\n")
    print("\nfor example, you can key in the secret key as following\n")
    print("\n01 23 45 67 89 ab cd ef\n")  # 秘密金匙的格式 , 以 16 進制
    print("so, please input the key stream and try to memorize it!\n")

    for i in range(8):  # 將輸入的每一筆 secret key 放入列表 userkey 中
        key_input = input(f"Enter hex value for key part {i+1}: ")
        userkey.append(int(key_input, 16))

    print("\nKey entered:", userkey)

    filename = input("\nplease input the file you want to encrypt\n")
    print("\nFile to encrypt:", filename)

    # 確保文件名輸入正確
    if not os.path.isfile(filename):
        print(f"File {filename} does not exist. Please check the filename and try again.")
        return

    # 讀取文件內容
    with open(filename, 'r') as file:
        file_data = file.read()

    # 加密文件內容
    encrypted_data = des_encrypt(file_data, userkey)

    # 將加密後的內容寫入新文件
    encrypted_filename = filename + ".enc"
    with open(encrypted_filename, 'w') as file:
        file.write(encrypted_data)

    print(f"\nEncrypted data has been saved to {encrypted_filename}")

if __name__ == "__main__":
    clear_screen()
    main()
